var execCmd = require('./execCmd');
var chalk = require('chalk');

module.exports = function (dir, branch, cb) {
	// add to git index, prepare to commit
	execCmd(['git', 'show-ref', '--verify', '--quiet', 'refs/heads/' + branch], {cwd: dir}, function(localStatus) {
		console.log(chalk.gray('git show-ref heads status: ' + localStatus));
		
		execCmd(['git', 'show-ref', '--verify', '--quiet', 'refs/remotes/origin/' + branch], {cwd: dir}, function(remoteStatus){
			console.log(chalk.gray('git show-ref remotes status: ' + remoteStatus));
			
			if(remoteStatus !== 0) {
				// new branch 
				execCmd(['git', 'branch', branch], {cwd: dir});
				// no remote, push origin
				execCmd(['git', 'push', '-u', 'origin', branch + ':' + branch], {cwd: dir});
			}

			// // local branch exists
			// // remove untracked files from the working tree
			execCmd(['git', 'clean', '-f', '-d'], {cwd: dir});
			// // reset all local modifications
			execCmd(['git', 'reset', '--hard'], {cwd: dir});

			execCmd(['git', 'fetch'], {cwd: dir});

			execCmd(['git', 'checkout', branch], {cwd: dir});

			execCmd(['git', 'rebase'], {cwd: dir}, cb);

		});
	});
}


// git show-ref --verify --quiet refs/heads/dev
//     if [ $? == 0 ]; then
//         ## local branch exists
//         ## remove untracked files from the working tree
// 	    git clean -f -d
// 	    ## reset all local modifications
// 	    git reset --hard
	    
// 	    git show-ref --verify --quiet refs/remotes/origin/dev
// 	    if [ $? != 0 ]; then
// 	        ## remote branch not exists
//             ## push
// 	        git push -u origin dev:dev || exit $?
// 	    fi
	    
// 	    git fetch && git checkout dev && git rebase
//     else
//         ## local branch not exists
//         ## create a branch
//         git checkout -B dev && git push -u origin dev:dev
//     fi
//     
//     